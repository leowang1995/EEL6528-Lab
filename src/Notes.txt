

Pull the code on Linux box

# Clone the repository (first time)
git clone https://github.com/leowang1995/EEL6528-Lab1.git
cd EEL6528-Lab1

# Or if you already have it cloned, just pull the updates
git pull origin main

# Make scripts executable
chmod +x run_linux.sh

# Quick start
./run_linux.sh --install-deps  # Install dependencies
./run_linux.sh --n210          # Compile N210 version
./lab1_n210 5e6 4 30           # Run with N210

Push every commit to Github
# 1. Check what changed
git status

# 2. Add all changes
git add .

# 3. Commit with message
git commit -m "Describe what you changed"

# 4. Push to GitHub
git push origin main




# Standard workflow for your lab
cd ~/EEL6528-Lab1
g++ -std=c++17 -O3 -o lab1_n210 lab1_n210.cpp -luhd -pthread
./lab1_n210



// =============================================================================
// Lab Questions Helper
// =============================================================================
// Question 2: Testing different sampling rates
// Run these commands and observe CPU usage with 'top -H':
//   ./lab1_rx 1e6 2 30    # 1 MHz - should work fine
//   ./lab1_rx 5e6 2 30    # 5 MHz - may see higher CPU
//   ./lab1_rx 10e6 2 30   # 10 MHz - likely to see overflows
//   ./lab1_rx 20e6 2 30   # 20 MHz - expect many overflows
//   ./lab1_rx 25e6 2 30   # 25 MHz - maximum for Gigabit Ethernet
//
// Question 3: Testing different number of threads
// Run these commands to observe thread scaling effects:
//   ./lab1_rx 5e6 1 30    # 1 processing thread
//   ./lab1_rx 5e6 2 30    # 2 processing threads
//   ./lab1_rx 5e6 4 30    # 4 processing threads
//   ./lab1_rx 5e6 8 30    # 8 processing threads
//
// Expected observations:
// - More threads can help process blocks faster
// - Too many threads may cause context switching overhead
// - Optimal thread count depends on number of CPU cores
// =============================================================================